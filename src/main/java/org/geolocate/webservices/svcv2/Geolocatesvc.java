
package org.geolocate.webservices.svcv2;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceException;
import jakarta.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 3.0.2
 * Generated source version: 3.0
 *
 * @author mole
 * @version $Id: $Id
 */
@WebServiceClient(name = "geolocatesvc", targetNamespace = "http://geo-locate.org/webservices/", wsdlLocation = "https://www.geo-locate.org/webservices/geolocatesvcv2/geolocatesvc.asmx?WSDL")
public class Geolocatesvc
    extends Service
{

    private final static URL GEOLOCATESVC_WSDL_LOCATION;
    private final static WebServiceException GEOLOCATESVC_EXCEPTION;
    private final static QName GEOLOCATESVC_QNAME = new QName("http://geo-locate.org/webservices/", "geolocatesvc");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("https://www.geo-locate.org/webservices/geolocatesvcv2/geolocatesvc.asmx?WSDL");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        GEOLOCATESVC_WSDL_LOCATION = url;
        GEOLOCATESVC_EXCEPTION = e;
    }

    /**
     * <p>Constructor for Geolocatesvc.</p>
     */
    public Geolocatesvc() {
        super(__getWsdlLocation(), GEOLOCATESVC_QNAME);
    }

    /**
     * <p>Constructor for Geolocatesvc.</p>
     *
     * @param features a {@link jakarta.xml.ws.WebServiceFeature} object.
     */
    public Geolocatesvc(WebServiceFeature... features) {
        super(__getWsdlLocation(), GEOLOCATESVC_QNAME, features);
    }

    /**
     * <p>Constructor for Geolocatesvc.</p>
     *
     * @param wsdlLocation a {@link java.net.URL} object.
     */
    public Geolocatesvc(URL wsdlLocation) {
        super(wsdlLocation, GEOLOCATESVC_QNAME);
    }

    /**
     * <p>Constructor for Geolocatesvc.</p>
     *
     * @param wsdlLocation a {@link java.net.URL} object.
     * @param features a {@link jakarta.xml.ws.WebServiceFeature} object.
     */
    public Geolocatesvc(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, GEOLOCATESVC_QNAME, features);
    }

    /**
     * <p>Constructor for Geolocatesvc.</p>
     *
     * @param wsdlLocation a {@link java.net.URL} object.
     * @param serviceName a {@link javax.xml.namespace.QName} object.
     */
    public Geolocatesvc(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    /**
     * <p>Constructor for Geolocatesvc.</p>
     *
     * @param wsdlLocation a {@link java.net.URL} object.
     * @param serviceName a {@link javax.xml.namespace.QName} object.
     * @param features a {@link jakarta.xml.ws.WebServiceFeature} object.
     */
    public Geolocatesvc(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * <p>getGeolocatesvcSoap.</p>
     *
     * @return a {@link org.geolocate.webservices.svcv2.GeolocatesvcSoap} object.
     */
    @WebEndpoint(name = "geolocatesvcSoap")
    public GeolocatesvcSoap getGeolocatesvcSoap() {
        return super.getPort(new QName("http://geo-locate.org/webservices/", "geolocatesvcSoap"), GeolocatesvcSoap.class);
    }

    /**
     * <p>getGeolocatesvcSoap.</p>
     *
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return a {@link org.geolocate.webservices.svcv2.GeolocatesvcSoap} object.
     */
    @WebEndpoint(name = "geolocatesvcSoap")
    public GeolocatesvcSoap getGeolocatesvcSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://geo-locate.org/webservices/", "geolocatesvcSoap"), GeolocatesvcSoap.class, features);
    }

    /**
     * <p>getGeolocatesvcSoap12.</p>
     *
     * @return a {@link org.geolocate.webservices.svcv2.GeolocatesvcSoap} object.
     */
    @WebEndpoint(name = "geolocatesvcSoap12")
    public GeolocatesvcSoap getGeolocatesvcSoap12() {
        return super.getPort(new QName("http://geo-locate.org/webservices/", "geolocatesvcSoap12"), GeolocatesvcSoap.class);
    }

    /**
     * <p>getGeolocatesvcSoap12.</p>
     *
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return a {@link org.geolocate.webservices.svcv2.GeolocatesvcSoap} object.
     */
    @WebEndpoint(name = "geolocatesvcSoap12")
    public GeolocatesvcSoap getGeolocatesvcSoap12(WebServiceFeature... features) {
        return super.getPort(new QName("http://geo-locate.org/webservices/", "geolocatesvcSoap12"), GeolocatesvcSoap.class, features);
    }

    /**
     * <p>getGeolocatesvcHttpGet.</p>
     *
     * @return a {@link org.geolocate.webservices.svcv2.GeolocatesvcHttpGet} object.
     */
    @WebEndpoint(name = "geolocatesvcHttpGet")
    public GeolocatesvcHttpGet getGeolocatesvcHttpGet() {
        return super.getPort(new QName("http://geo-locate.org/webservices/", "geolocatesvcHttpGet"), GeolocatesvcHttpGet.class);
    }

    /**
     * <p>getGeolocatesvcHttpGet.</p>
     *
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return a {@link org.geolocate.webservices.svcv2.GeolocatesvcHttpGet} object.
     */
    @WebEndpoint(name = "geolocatesvcHttpGet")
    public GeolocatesvcHttpGet getGeolocatesvcHttpGet(WebServiceFeature... features) {
        return super.getPort(new QName("http://geo-locate.org/webservices/", "geolocatesvcHttpGet"), GeolocatesvcHttpGet.class, features);
    }

    /**
     * <p>getGeolocatesvcHttpPost.</p>
     *
     * @return a {@link org.geolocate.webservices.svcv2.GeolocatesvcHttpPost} object.
     */
    @WebEndpoint(name = "geolocatesvcHttpPost")
    public GeolocatesvcHttpPost getGeolocatesvcHttpPost() {
        return super.getPort(new QName("http://geo-locate.org/webservices/", "geolocatesvcHttpPost"), GeolocatesvcHttpPost.class);
    }

    /**
     * <p>getGeolocatesvcHttpPost.</p>
     *
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return a {@link org.geolocate.webservices.svcv2.GeolocatesvcHttpPost} object.
     */
    @WebEndpoint(name = "geolocatesvcHttpPost")
    public GeolocatesvcHttpPost getGeolocatesvcHttpPost(WebServiceFeature... features) {
        return super.getPort(new QName("http://geo-locate.org/webservices/", "geolocatesvcHttpPost"), GeolocatesvcHttpPost.class, features);
    }

    private static URL __getWsdlLocation() {
        if (GEOLOCATESVC_EXCEPTION!= null) {
            throw GEOLOCATESVC_EXCEPTION;
        }
        return GEOLOCATESVC_WSDL_LOCATION;
    }

}
